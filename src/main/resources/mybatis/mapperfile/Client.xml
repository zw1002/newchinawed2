<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="ClientMapper">
  <resultMap id="BaseResultMap" type="com.hnqj.model.Client">

    <id column="clintuid" jdbcType="VARCHAR" property="clintuid" />
    <result column="clientname" jdbcType="VARCHAR" property="clientname" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="address" jdbcType="VARCHAR" property="address" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="creator" jdbcType="VARCHAR" property="creator" />
    <result column="createtime" jdbcType="TIMESTAMP" property="createtime" />
  </resultMap>
  <sql id="Base_Column_List">

    clintuid, clientname, phone, address,email,creator,createtime
  </sql>
  <select id="getClientForId" parameterType="java.lang.String" resultMap="BaseResultMap">

    select 
    <include refid="Base_Column_List" />
    from tb_client
    where clintuid = #{clintuid,jdbcType=VARCHAR}
  </select>
  <select id="getAllClient" parameterType="java.lang.String" resultMap="BaseResultMap">

    select
    <include refid="Base_Column_List" />
     from tb_client
    order BY createtime DESC
    <if test="limit != null and limit>0">
      LIMIT #{offset},#{limit}
    </if>
  </select>
  <delete id="deleteClientByFid" parameterType="java.lang.String">

    delete from tb_client
    where clintuid = #{clintuid,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.hnqj.model.Client">

    insert into tb_client (clintuid, clientname, phone, 
      address,email,creator,createtime)
    values (#{clintuid,jdbcType=VARCHAR}, #{clientname,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, 
      #{address,jdbcType=VARCHAR},
    #{email,jdbcType=VARCHAR},
    #{creator,jdbcType=VARCHAR},
    #{createtime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="addClient" parameterType="pd">

    insert into tb_client
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="clintuid != null">
        clintuid,
      </if>
      <if test="clientname != null">
        clientname,
      </if>
      <if test="phone != null">
        phone,
      </if>
      <if test="address != null">
        address,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="creator != null">
        creator,
      </if>
      <if test="createtime != null">
        createtime
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="clintuid != null">
        #{clintuid,jdbcType=VARCHAR},
      </if>
      <if test="clientname != null">
        #{clientname,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="creator != null">
        #{creator,jdbcType=VARCHAR},
      </if>
      <if test="createtime != null">
        #{createtime,jdbcType=TIMESTAMP}
      </if>
    </trim>
  </insert>
  <update id="updateClient" parameterType="pd">

    update tb_client
    <set>
      <if test="clientname != null">
        clientname = #{clientname,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="creator != null">
        creator = #{creator,jdbcType=VARCHAR},
      </if>
      <if test="createtime != null">
        createtime = #{createtime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where clintuid = #{clintuid,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hnqj.model.Client">

    update tb_client
    set clientname = #{clientname,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR},
    email = #{email,jdbcType=VARCHAR},
    creator = #{creator,jdbcType=VARCHAR},
    createtime = #{createtime,jdbcType=TIMESTAMP}
    where clintuid = #{clintuid,jdbcType=VARCHAR}
  </update>
</mapper>